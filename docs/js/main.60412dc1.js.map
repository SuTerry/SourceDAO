{"version":3,"file":"js/main.60412dc1.js","mappings":"wGAAKA,G,SAAAA,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,MAAAA,O,EAAAA,IAAAA,EAAAA,CAAAA,IAKL,K,2CCHyBC,E,8ECIzB,G,gGAAA,SAAe,GAAuC,IAApCA,EAAoC,EAApCA,SAChB,OACE,gCAAGA,EAAH,IAFJ,GCFA,aACE,OACE,gCACE,gBAAC,KAAD,MAHN,ECCMC,G,SAAOC,EAAAA,EAAAA,OAAK,kBAAM,+KAAN,KAELC,EAAwB,CACnC,CACEC,OAAO,EACPC,SHRqBL,EGQH,gBAACC,EAAD,MHPb,gBAAC,EAAAK,SAAD,CAAUC,SAAU,kCAAQP,M,0GIIrC,I,EAcA,EAd8B,CAC5B,CACEQ,KAAM,IACNH,QAAS,gBAACI,EAAD,CAAgBT,SAAU,gBAACU,EAAD,QACnCV,SAAU,GAAF,Q,EACHW,E,knBADG,CAEN,CACEH,KAAM,IACNH,QAAS,gBAAC,KAAD,CAAUO,GAAG,WCT9B,aACE,OACE,iCACGC,EAAAA,EAAAA,IAAUC,GAHjB,ECWMC,GAAOC,EAAAA,EAAAA,GAAWC,SAASC,eAAe,SAC1CC,GAAYC,EAAAA,EAAAA,IAAaC,EAAAA,IAE/BN,EAAKO,OACH,gBAAC,KAAD,CAAUD,MAAOA,EAAAA,IACf,gBAAC,IAAD,CAAaE,QAAS,KAAMJ,UAAWA,GACrC,gBAAC,KAAD,KACE,gBAACK,EAAD,S,yJCfFC,GAAWC,EAAAA,EAAAA,IAAgB,CAC/BC,aAAAA,EAAAA,IAGIC,EAAgB,CACpBC,IAAK,YACLC,QAAAA,EAAAA,GAGIC,GAAmBC,EAAAA,EAAAA,IAAeJ,EAAeH,GAEjDJ,GAAQY,EAAAA,EAAAA,IAAe,CAC3BC,QAASH,EACTI,WAAY,CAACC,EAAAA,KAGf,OAOO,IAAMC,EAAiB,kBAAMC,EAAAA,EAAAA,KAAN,EACjBC,EAAkDC,EAAAA,E,+EC7BzDC,GAAOC,EAAAA,EAAAA,IAAY,CACvBC,KAAM,OACNC,aAAc,CACZH,KAAMI,EAAAA,EAAAA,OAERpB,SAAU,CACRqB,QADQ,SACAC,EAAOC,GACbD,EAAMN,KAAOO,EAAOC,OACrB,KAGUH,EAAYL,EAAKS,QAAjBJ,QACf,IAAeL,EAAf,O","sources":["webpack://react/./src/constants/lang.ts","webpack://react/./src/utils/routes.tsx","webpack://react/./src/components/ExplorerRoutes/index.tsx","webpack://react/./src/components/Layout/index.tsx","webpack://react/./src/routes/common/index.tsx","webpack://react/./src/routes/index.tsx","webpack://react/./src/App.tsx","webpack://react/./src/main.tsx","webpack://react/./src/store/index.ts","webpack://react/./src/store/modules/lang.ts"],"sourcesContent":["enum Lang {\r\n  zh_cn = 'zh_cn',\r\n  en_us = 'en_us',\r\n}\r\n\r\nexport default Lang","import React, { ReactNode, Suspense } from 'react'\r\n\r\nexport const lazyLoad = (children: ReactNode): ReactNode => {\r\n  return <Suspense fallback={<></>}>{children}</Suspense>\r\n}","import React, { ReactNode } from 'react'\r\n\r\ninterface IProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport default ({ children }: IProps): JSX.Element => {\r\n  return (\r\n    <>{children} </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Outlet } from 'react-router-dom'\r\n\r\nexport default (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Outlet />\r\n    </>\r\n  )\r\n}\r\n","import React, { lazy } from 'react'\r\nimport { RouteObject } from 'react-router-dom'\r\n\r\nimport { lazyLoad } from '@utils/routes'\r\n\r\nconst Home = lazy(() => import('@views/Home/index'))\r\n\r\nexport const routes: RouteObject[] = [\r\n  {\r\n    index: true,\r\n    element: lazyLoad(<Home />),\r\n  }\r\n]","import React from 'react'\r\nimport { Navigate, RouteObject } from 'react-router-dom'\r\nimport ExplorerRoutes from '@components/ExplorerRoutes'\r\nimport Layout from '@components/Layout'\r\n\r\nimport { routes as common } from './common'\r\n\r\nconst router: RouteObject[] = [\r\n  {\r\n    path: '/',\r\n    element: <ExplorerRoutes children={<Layout />} />,\r\n    children: [\r\n      ...common,\r\n      {\r\n        path: '*',\r\n        element: <Navigate to='/' />,\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\nexport default router","import React from 'react'\r\n\r\nimport { useRoutes } from 'react-router-dom'\r\n\r\nimport router from '@routes/index' // 路由\r\n\r\nexport default (): JSX.Element => {\r\n  return (\r\n    <>\r\n      {useRoutes(router)}\r\n    </>\r\n  )\r\n}\r\n","import 'core-js/es/map'\r\nimport 'core-js/es/set'\r\n\r\nimport React from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\n// import { BrowserRouter } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistStore } from 'redux-persist'\r\nimport store from '@store/index'\r\nimport App from './App'\r\n\r\nimport '@fontsource/space-grotesk'\r\n\r\nimport '@css/main.less'\r\n\r\nconst root = createRoot(document.getElementById('root') as Element)\r\nconst persistor = persistStore(store)\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>\r\n)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistReducer } from 'redux-persist'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport langReducers from './modules/lang'\r\n\r\nconst reducers = combineReducers({\r\n  langReducers,\r\n})\r\n\r\nconst persistConfig = {\r\n  key: 'SourceDAO',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: [thunk]\r\n})\r\n\r\nexport default store\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nimport ctsLang from '@constants/lang'\r\n\r\nconst lang = createSlice({\r\n  name: 'lang',\r\n  initialState: {\r\n    lang: ctsLang.en_us,\r\n  },\r\n  reducers: {\r\n    setLang(state, action: PayloadAction<ctsLang>) {\r\n      state.lang = action.payload\r\n    },\r\n  },\r\n})\r\nexport const { setLang } = lang.actions\r\nexport default lang.reducer\r\n"],"names":["Lang","children","Home","lazy","routes","index","element","Suspense","fallback","path","ExplorerRoutes","Layout","common","to","useRoutes","router","root","createRoot","document","getElementById","persistor","persistStore","store","render","loading","App","reducers","combineReducers","langReducers","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","reducer","middleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","lang","createSlice","name","initialState","ctsLang","setLang","state","action","payload","actions"],"sourceRoot":""}